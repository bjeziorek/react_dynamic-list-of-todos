{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","isEyeOpenFor","setDetails","queryFilter","statusFilter","useState","visibleTodo","setVisibleTodo","useEffect","filteredByQuery","filter","todo","title","toLocaleLowerCase","includes","filteredByStatusAndQuery","completed","className","map","id","type","onClick","TodoFilter","setTaskStatusFilter","setQueryFilter","query","setQuery","status","setStatus","handleInputChange","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","details","user","setUser","isLoading","setIsLoading","userId","getUser","catch","error","message","finally","href","email","name","App","setTodos","setStatusFilter","recievedTodos","length","ReactDOM","render","document","getElementById"],"mappings":"mOAWaA,EAAoC,SAAC,GAM3C,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,EAAsCC,mBAAiBL,GAAvD,mBAAOM,EAAP,KAAoBC,EAApB,KAkBA,OAFAC,qBAdsB,WACpB,IAAMC,EAAmBN,EAAsBH,EAC5CU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,oBACxBC,SAASX,EAAYU,wBAFab,EAIjCe,EAA4C,QAAjBX,EAC7BK,EAAgBC,QAAO,SAAAC,GAAI,MAAsB,cAAjBP,GACX,IAAnBO,EAAKK,WACc,IAAnBL,EAAKK,aACPP,EAEJF,EAAeQ,KAGQ,CAACZ,EAAaC,IAGrC,wBAAOa,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCAEGX,EAAYY,KAAI,SAAAP,GACf,IACEQ,EACER,EADFQ,GAAIP,EACFD,EADEC,MAAOI,EACTL,EADSK,UAGb,OACE,qBACE,UAAQ,OACRC,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,eAAd,SACGD,GAEL,sBAAMC,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIb,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAS,mBACED,EACR,UACA,UAHN,SAMGJ,MAIL,oBAAIK,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAMnB,EAAWS,IAJ5B,SAME,sBAAMM,UAAU,OAAhB,SACE,mBAAGA,UAAS,cAASE,IAAOlB,EACxB,eACA,oBAhCLkB,YCtDNG,EAAa,SAAC,GAGH,IAFtBC,EAEqB,EAFrBA,oBACAC,EACqB,EADrBA,eAEA,EAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAA4BrB,mBAAqB,OAAjD,mBAAOsB,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAACC,GACzBJ,EAASI,GACTN,EAAeM,IAQjB,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,SAAU,SAACC,GAAD,OAXQF,EAWsBE,EACrCC,OAAOH,MAXlBF,EAAUE,QACVP,EAAoBO,GAFK,IAACA,GAalBA,MAAOH,EAJT,UAME,wBAAQG,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGb,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRG,KAAK,OACLH,UAAU,QACViB,YAAY,YACZH,SAAU,SAACC,GAAD,OAAWH,EAAkBG,EAAMC,OAAOH,QACpDA,MAAOL,IAET,sBAAMR,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEGX,GAEC,wBACE,UAAQ,oBACRL,KAAK,SACLH,UAAU,SACVI,QAAS,kBAAMQ,EAAkB,gBCjD/C,SAASQ,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAK/B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNgC,EAAsC,SAAC,GAG7C,IAFLC,EAEI,EAFJA,QACAhD,EACI,EADJA,WAEA,EAAwBG,qBAAxB,mBAAO8C,EAAP,KAAaC,EAAb,KACA,EAAkC/C,oBAAS,GAA3C,mBAAOgD,EAAP,KAAkBC,EAAlB,KAGEnC,EACE+B,EADF/B,GAAIH,EACFkC,EADElC,UAAWJ,EACbsC,EADatC,MAAO2C,EACpBL,EADoBK,OAUxB,OAPA/C,qBAAU,YFIW,SAAC+C,GAAD,OAAoBlB,EAAG,iBAAiBkB,KEH3DC,CAAQD,GACLX,KAAMQ,GACNK,OAAM,SAACC,GAAD,OAAWA,EAAMC,WACvBC,SAAQ,kBAAMN,GAAa,QAC7B,IAGD,sBAAKrC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEboC,EAsCE,cAAC,EAAD,IArCF,sBAAKpC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,mBAKGE,KAIH,wBACEC,KAAK,SACLH,UAAU,SACV,UAAQ,cACRI,QAAS,kBAAMnB,EAAW,YAI9B,sBAAKe,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGL,IAGH,oBAAGK,UAAU,QAAQ,UAAQ,aAA7B,UACGD,EACG,wBAAQC,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBACH,OACD,mBAAG4C,KAAI,wBAAYV,QAAZ,IAAYA,OAAZ,EAAYA,EAAMW,OAAzB,gBACGX,QADH,IACGA,OADH,EACGA,EAAMY,oBCrDVC,EAAgB,WAC3B,MAA0B3D,mBAAiB,IAA3C,mBAAOL,EAAP,KAAciE,EAAd,KACA,EAAwC5D,mBAAS,OAAjD,mBAAOD,EAAP,KAAqB8D,EAArB,KACA,EAAsC7D,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBqB,EAApB,KACA,EAA8BnB,mBAAsB,MAApD,mBAAO6C,EAAP,KAAgBhD,EAAhB,KAMA,OAJAM,qBAAU,WHOkB6B,EAAY,UGN3BO,MAAK,SAACuB,GAAD,OAAmBF,EAASE,QAC3C,IAGD,qCACE,qBAAKlD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEM,oBAAqB2C,EACrB1C,eAAgBA,MAIpB,qBAAKP,UAAU,QAAf,SAEIjB,EAAMoE,OAEF,cAAC,EAAD,CACEpE,MAAOA,EACPC,aAAciD,EAAUA,EAAQ/B,IAAM,EACtCjB,WAAYA,EACZC,YAAaA,EACbC,aAAcA,IAGhB,cAAC,EAAD,aAOb8C,GAAW,cAAC,EAAD,CAAWA,QAASA,EAAShD,WAAYA,QCnD3DmE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a954630.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  isEyeOpenFor: number | null,\n  setDetails: (arg0: Todo)=> void,\n  queryFilter: string,\n  statusFilter: string,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  isEyeOpenFor,\n  setDetails,\n  queryFilter,\n  statusFilter,\n}) => {\n  const [visibleTodo, setVisibleTodo] = useState<Todo[]>(todos);\n\n  const filterByQuery = ():void => {\n    const filteredByQuery = !queryFilter ? todos : todos\n      .filter(todo => todo.title.toLocaleLowerCase()\n        .includes(queryFilter.toLocaleLowerCase()));\n\n    const filteredByStatusAndQuery = statusFilter !== 'all'\n      ? filteredByQuery.filter(todo => (statusFilter === 'completed'\n        ? todo.completed === true\n        : todo.completed === false))\n      : filteredByQuery;\n\n    setVisibleTodo(filteredByStatusAndQuery);\n  };\n\n  useEffect(filterByQuery, [queryFilter, statusFilter]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {visibleTodo.map(todo => {\n          const {\n            id, title, completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n          && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  `has-text-${completed\n                    ? 'success'\n                    : 'danger'}`\n                }\n                >\n                  {title}\n\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setDetails(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far ${id === isEyeOpenFor\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'\n                    }`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { TaskStatus } from '../../types/TaskStatus';\n\ninterface TodoFilterProps {\n  setTaskStatusFilter: (value: TaskStatus)=>void\n  setQueryFilter: (arg0: string)=>void\n}\n\nexport const TodoFilter = ({\n  setTaskStatusFilter,\n  setQueryFilter,\n}: TodoFilterProps) => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState<TaskStatus>('all');\n\n  const handleInputChange = (value: string) => {\n    setQuery(value);\n    setQueryFilter(value);\n  };\n\n  const handleStatusChange = (value: string) => {\n    setStatus(value as TaskStatus);\n    setTaskStatusFilter(value as TaskStatus);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleStatusChange(event\n              .target.value as TaskStatus)}\n            value={status}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => handleInputChange(event.target.value)}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleInputChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoModalProps {\n  details: Todo,\n  setDetails: (arg0: Todo | null)=>void,\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  details,\n  setDetails,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const {\n    id, completed, title, userId,\n  } = details;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((setUser))\n      .catch((error) => error.message)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setDetails(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )\n        : (\n          <Loader />\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [queryFilter, setQueryFilter] = useState('');\n  const [details, setDetails] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then((recievedTodos) => setTodos(recievedTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setTaskStatusFilter={setStatusFilter}\n                setQueryFilter={setQueryFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length\n                  ? (\n                    <TodoList\n                      todos={todos}\n                      isEyeOpenFor={details ? details.id : -1}\n                      setDetails={setDetails}\n                      queryFilter={queryFilter}\n                      statusFilter={statusFilter}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {details && <TodoModal details={details} setDetails={setDetails} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}